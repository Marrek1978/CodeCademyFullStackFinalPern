post bird create table


CREATE TABLE users (
    id character(32) PRIMARY KEY,
    email varchar(50) NOT NULL UNIQUE,
    password varchar(50) NOT NULL,
    firstName varchar(50),
    lastName varchar(50),
    address varchar(100),
    phone varchar(13),
    googleId varchar(50),
    facebookId varchar(50),
    twitterId varchar(50),
    githubId varchar(50)
);


CREATE TABLE ccdata (
    id character(32) PRIMARY KEY,
    userId character(32) NOT NULL UNIQUE ,
    cardnumber varchar(20) NOT NULL UNIQUE,
    expirationdate varchar(5),
    cvv varchar(4),
     FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE userSubscription (
  id character(32) PRIMARY KEY,
	 userId character(32) NOT NULL UNIQUE ,
  	subscription varchar(50),
   FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE
  );




  Login => Page                      AXIOS                                  ROUTE                     QUERY                   
  => Register(join)         ->      registerUserAxios        ->          /register`         ->    getUserByEmail  
        setErrorMessage             <-errorObj                     <-  return res.status(409)           <-  user
    setErrorMessage                 <-errorObj                      <- return res.status(500)          <- error
                                                                                                        
                                                                                                  <- return null
                                                                                                 > registerNewUser                                
      setErrorMessage             <-errorObj                          <- return res.status(500)          <- error
    setToast                        <-  response                      <- return res.status(201)          <- user


    => Login                            loginUserAxios                    /login                    passport auth
        setErrorMessage                   <-errorObj                <- return res .status(500)      <- err
        setErrorMessage                  <-errorObj               <- return res .status(401)     <- info
        setErrorMessage                  <-errorObj                <- return res .status(401)       <- !user

                                                                                                    <-user
                                                                                                    > req.login 
    setToastMessage                   <-errorObj              <-res.status(500)                     <- err
    setToastMessage                    <-response              <-res.send({ user, authed: true });  <- user

                                           